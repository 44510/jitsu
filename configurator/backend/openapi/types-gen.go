// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package openapi

import (
	"encoding/json"
	"fmt"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Unspecified JSON Object
type AnyObject struct {
	AdditionalProperties map[string]interface{} `json:"-"`
}

// EmailAndPasswordRequest defines model for EmailAndPasswordRequest.
type EmailAndPasswordRequest struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// ErrorObject defines model for ErrorObject.
type ErrorObject struct {
	Error   *string `json:"error,omitempty"`
	Message string  `json:"message"`
}

// SignupRequest defines model for SignupRequest.
type SignupRequest struct {
	// Embedded struct due to allOf(#/components/schemas/EmailAndPasswordRequest)
	EmailAndPasswordRequest `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Company     string `json:"company"`
	EmailOptout bool   `json:"emailOptout"`
	Name        string `json:"name"`
	UsageOptout bool   `json:"usageOptout"`
}

// TokensResponse defines model for TokensResponse.
type TokensResponse struct {
	AccessToken  string `json:"access_token"`
	RefreshToken string `json:"refresh_token"`
	UserId       string `json:"user_id"`
}

// ObjectType defines model for objectType.
type ObjectType string

// ObjectUid defines model for objectUid.
type ObjectUid string

// ProjectId defines model for projectId.
type ProjectId string

// Unspecified JSON Object
type AnyArrayResponse AnyObject

// Unspecified JSON Object
type AnyObjectResponse AnyObject

// Error defines model for Error.
type Error ErrorObject

// SetUsersInfoJSONBody defines parameters for SetUsersInfo.
type SetUsersInfoJSONBody AnyObject

// UsersOnboardedSignUpJSONBody defines parameters for UsersOnboardedSignUp.
type UsersOnboardedSignUpJSONBody SignupRequest

// UsersPasswordChangeJSONBody defines parameters for UsersPasswordChange.
type UsersPasswordChangeJSONBody struct {
	NewPassword *string `json:"new_password,omitempty"`
	ResetId     *string `json:"reset_id,omitempty"`
}

// UsersPasswordResetJSONBody defines parameters for UsersPasswordReset.
type UsersPasswordResetJSONBody struct {
	Callback *string `json:"callback,omitempty"`
	Email    string  `json:"email"`
}

// UsersSignInJSONBody defines parameters for UsersSignIn.
type UsersSignInJSONBody EmailAndPasswordRequest

// UsersTokenRefreshJSONBody defines parameters for UsersTokenRefresh.
type UsersTokenRefreshJSONBody struct {
	RefreshToken string `json:"refresh_token"`
}

// SetObjectsByProjectIDAndObjectTypeJSONBody defines parameters for SetObjectsByProjectIDAndObjectType.
type SetObjectsByProjectIDAndObjectTypeJSONBody AnyObject

// PatchObjectsByProjectIDAndObjectTypeAndIDJSONBody defines parameters for PatchObjectsByProjectIDAndObjectTypeAndID.
type PatchObjectsByProjectIDAndObjectTypeAndIDJSONBody AnyObject

// SetUsersInfoJSONRequestBody defines body for SetUsersInfo for application/json ContentType.
type SetUsersInfoJSONRequestBody SetUsersInfoJSONBody

// UsersOnboardedSignUpJSONRequestBody defines body for UsersOnboardedSignUp for application/json ContentType.
type UsersOnboardedSignUpJSONRequestBody UsersOnboardedSignUpJSONBody

// UsersPasswordChangeJSONRequestBody defines body for UsersPasswordChange for application/json ContentType.
type UsersPasswordChangeJSONRequestBody UsersPasswordChangeJSONBody

// UsersPasswordResetJSONRequestBody defines body for UsersPasswordReset for application/json ContentType.
type UsersPasswordResetJSONRequestBody UsersPasswordResetJSONBody

// UsersSignInJSONRequestBody defines body for UsersSignIn for application/json ContentType.
type UsersSignInJSONRequestBody UsersSignInJSONBody

// UsersTokenRefreshJSONRequestBody defines body for UsersTokenRefresh for application/json ContentType.
type UsersTokenRefreshJSONRequestBody UsersTokenRefreshJSONBody

// SetObjectsByProjectIDAndObjectTypeJSONRequestBody defines body for SetObjectsByProjectIDAndObjectType for application/json ContentType.
type SetObjectsByProjectIDAndObjectTypeJSONRequestBody SetObjectsByProjectIDAndObjectTypeJSONBody

// PatchObjectsByProjectIDAndObjectTypeAndIDJSONRequestBody defines body for PatchObjectsByProjectIDAndObjectTypeAndID for application/json ContentType.
type PatchObjectsByProjectIDAndObjectTypeAndIDJSONRequestBody PatchObjectsByProjectIDAndObjectTypeAndIDJSONBody

// Getter for additional properties for AnyObject. Returns the specified
// element and whether it was found
func (a AnyObject) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for AnyObject
func (a *AnyObject) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for AnyObject to handle AdditionalProperties
func (a *AnyObject) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for AnyObject to handle AdditionalProperties
func (a AnyObject) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
